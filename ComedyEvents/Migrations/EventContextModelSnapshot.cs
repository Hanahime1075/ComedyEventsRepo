// <auto-generated />
using System;
using ComedyEvents.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComedyEvents.Migrations
{
    [DbContext(typeof(EventContext))]
    partial class EventContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ComedyEvents.Model.Comedian", b =>
                {
                    b.Property<int>("ComedianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComedianID");

                    b.ToTable("comedians");

                    b.HasData(
                        new
                        {
                            ComedianID = 1,
                            ContactPhone = "112345332",
                            FirstName = "Pavol",
                            LastName = "Almasi"
                        },
                        new
                        {
                            ComedianID = 2,
                            ContactPhone = "442512748",
                            FirstName = "Robin",
                            LastName = "William"
                        });
                });

            modelBuilder.Entity("ComedyEvents.Model.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("VenueID");

                    b.ToTable("events");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            EventDate = new DateTime(2019, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Comedy Night",
                            VenueID = 1
                        });
                });

            modelBuilder.Entity("ComedyEvents.Model.Gig", b =>
                {
                    b.Property<int>("GigID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ComedianID")
                        .HasColumnType("int");

                    b.Property<int?>("EventID")
                        .HasColumnType("int");

                    b.Property<string>("GigHeadline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GigLengthInMinutes")
                        .HasColumnType("int");

                    b.HasKey("GigID");

                    b.HasIndex("ComedianID");

                    b.HasIndex("EventID");

                    b.ToTable("gigs");

                    b.HasData(
                        new
                        {
                            GigID = 1,
                            ComedianID = 1,
                            GigHeadline = "Pavols show",
                            GigLengthInMinutes = 60
                        },
                        new
                        {
                            GigID = 2,
                            ComedianID = 2,
                            GigHeadline = "Robin show",
                            GigLengthInMinutes = 45
                        });
                });

            modelBuilder.Entity("ComedyEvents.Model.Venue", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seating")
                        .HasColumnType("int");

                    b.Property<bool>("ServesAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VenueID");

                    b.ToTable("venues");

                    b.HasData(
                        new
                        {
                            VenueID = 1,
                            City = "Wikes pron",
                            Seating = 125,
                            ServesAlcohol = true,
                            State = "PA",
                            Street = "123 Doa Street",
                            VenueName = "Mohegun Sun",
                            ZipCode = "12382"
                        });
                });

            modelBuilder.Entity("ComedyEvents.Model.Event", b =>
                {
                    b.HasOne("ComedyEvents.Model.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("ComedyEvents.Model.Gig", b =>
                {
                    b.HasOne("ComedyEvents.Model.Comedian", "Comedian")
                        .WithMany()
                        .HasForeignKey("ComedianID");

                    b.HasOne("ComedyEvents.Model.Event", "Event")
                        .WithMany("Gigs")
                        .HasForeignKey("EventID");

                    b.Navigation("Comedian");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ComedyEvents.Model.Event", b =>
                {
                    b.Navigation("Gigs");
                });
#pragma warning restore 612, 618
        }
    }
}
